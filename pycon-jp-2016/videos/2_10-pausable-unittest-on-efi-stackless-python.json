{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "\u7d44\u8fbc\u307f\u6a5f\u5668\u306a\u3069\u306e\u30c6\u30b9\u30c8\u3067\u306f\u300c\u518d\u8d77\u52d5\u3092\u7e70\u308a\u8fd4\u3057\u306a\u304c\u3089\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u300d\u3053\u3068\u304c\u591a\u304f\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u958b\u767a\u3057\u305fPausable Unittest\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306eunittest\u306e\u3088\u3046\u306b\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3067\u304d\u3001\u304b\u3064\u3001\u300cPython\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3092\u4e00\u5ea6\u7d42\u4e86\u3057\u3001\u518d\u8d77\u52d5\u5f8c\u306b\u7d9a\u304d\u3092\u5b9f\u884c\u3059\u308b\u300d\u5834\u5408\u306e\u30c6\u30b9\u30c8\u3082\u3001\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u5b9f\u4f8b\u3092EFI\u4e0a\u306b\u79fb\u690d\u3057\u305fStackless Python\u3092\u7528\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\nAbstract\n========\nPausable Unittest on EFI Stackless Python\n-------------------------------------------\n\u5bb6\u96fb\u6a5f\u5668\u306a\u3069\u306e\u7d44\u8fbc\u307f\u30c7\u30d0\u30a4\u30b9\u3084PC\u306a\u3069\u306e\u30c6\u30b9\u30c8\u3067\u306f\u3001\u300c\u30b7\u30b9\u30c6\u30e0\u306e\u518d\u8d77\u52d5\u3092\u9014\u4e2d\u306b\u306f\u3055\u307f\u306a\u304c\u3089\u3001\u30c6\u30b9\u30c8\u3092\u7d99\u7d9a\u3059\u308b\u300d\u3053\u3068\u304c\u591a\u304f\u3042\u308a\u307e\u3059\u3002 \u3053\u3046\u3044\u3063\u305f\u5834\u5408\u3001Python \u3067\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u3001\u518d\u8d77\u52d5\u306b\u3088\u3063\u3066 Python \u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u304c\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u518d\u8d77\u52d5\u5f8c\u306b\u7d9a\u304d\u304b\u3089\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306e\u306f\u56f0\u96e3\u3067\u3059\u3002 \u3057\u304b\u3057\u3001\u4f8b\u3048\u3070\u4e0b\u8a18\u306e\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u3088\u3046\u306b\u3001 (\\*1) \u3067\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3092\u8aad\u307f\u3001 (\\*2) \u3067\u30b7\u30b9\u30c6\u30e0\u3092\u518d\u8d77\u52d5\u3057\u3001\u518d\u8d77\u52d5\u5f8c\u306b (\\*3) \u304b\u3089\u5b9f\u884c\u3057\u3066\u304f\u308c\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002 \u307e\u305f\u3001\u518d\u8d77\u52d5\u5f8c\u306e (\\*4) \u3067\u306f\u3001\u518d\u8d77\u52d5\u524d\u306b (\\*1) \u3067\u4fdd\u5b58\u3057\u305f\u5909\u6570\u3082\u3001\u7279\u5225\u306b\u30bb\u30fc\u30d6/\u30ed\u30fc\u30c9\u3057\u306a\u304f\u3066\u3082\u53c2\u7167\u3067\u304d\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n.. code:: python\n\n    def test():\n        a = read_register()   # (*1)\n        reboot()              # (*2)\n        b = read_register()   # (*3)\n        assertEqual(a, b)     # (*4)\n\nPausable Unittest \u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001 Stackless Python \u3082\u3057\u304f\u306f PyPy \u306e\u6a5f\u80fd\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u8a18\u8ff0\u3092\u53ef\u80fd\u3068\u3057\u307e\u3059\u3002\n\n\u767a\u8868\u3067\u306f\u3001EFI \u4ed5\u69d8\u306b\u6e96\u62e0\u3057\u305f\u6700\u8fd1\u306e PC \u3067\u8d77\u52d5\u3067\u304d\u308b\u300cEFI Shell\u300d\u74b0\u5883\u306b\u79fb\u690d\u3057\u305f Stackless Python \u306e\u8aac\u660e\u3068\u3068\u3082\u306b\u3001\u5b9f\u969b\u306e\u6319\u52d5\u3092\u542b\u3081\u3001\u4e0b\u8a18\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n*    \u300c\u518d\u8d77\u52d5\u3092\u9014\u4e2d\u306b\u306f\u3055\u307f\u306a\u304c\u3089\u30c6\u30b9\u30c8\u3092\u7d99\u7d9a\u3059\u308b\u300d\u969b\u306e\u554f\u984c\u70b9\n     \u5909\u6570\u306e\u9000\u907f\u3068\u5fa9\u65e7\u3001\u95a2\u6570\u3092\u9014\u4e2d\u304b\u3089\u5b9f\u884c\u3055\u305b\u308b\u3053\u3068\u306e\u5fc5\u8981\u6027\u306b\u3064\u3044\u3066\u3001\u8aac\u660e\u3057\u307e\u3059\u3002\n*    Stackless Python \u306e tasklet \u3068\u3001PyPy \u306e continulet \u3067\u3067\u304d\u308b\u3053\u3068\n     \u305d\u308c\u305e\u308c\u3092\u4f7f\u3063\u3066\u3067\u304d\u308b\u300c\u95a2\u6570\u306e\u9014\u4e2d\u72b6\u614b\u306e\u4fdd\u5b58\u3068\u5fa9\u65e7\u300d\u306b\u3064\u3044\u3066\u3001\u8aac\u660e\u3057\u307e\u3059\u3002\n*    Pausable Unittest \u304c\u53ef\u80fd\u3068\u3059\u308b\u3053\u3068\n     \u518d\u8d77\u52d5\u306b\u307e\u3064\u308f\u308b\u30c6\u30b9\u30c8\u306e\u554f\u984c\u70b9\u3092\u89e3\u6c7a\u3059\u308b Pausable Unittest \u306b\u3064\u3044\u3066\u3001\u8aac\u660e\u3057\u307e\u3059\u3002\n     \u7279\u306b\u3001 unittest \u306e pickle \u5bfe\u5fdc\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n*    Stackless Python \u306e EFI Shell \u4e0a\u3078\u306e\u79fb\u690d\n     \u5b9f\u969b\u306e\u9069\u7528\u4f8b\u3068\u3057\u3066\u7528\u3044\u305f\u3001PC \u306e Pre-OS \u74b0\u5883\u3067\u3042\u308b EFI Shell \u4e0a\u3078\u306e Stackless Python \u306e\u79fb\u690d\u306b\u3064\u3044\u3066\u3001\u8aac\u660e\u3057\u307e\u3059\u3002\n     \u79fb\u690d\u3059\u308b\u3046\u3048\u3067\u4e00\u90e8\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u77e5\u8b58\u304c\u5fc5\u8981\u306a\u500b\u6240\u306b\u3064\u3044\u3066\u3082\u7c21\u5358\u306b\u89e6\u308c\u308b\u4e88\u5b9a\u3067\u3059\u3002\n*    \u4e0a\u8a18\u3092\u7528\u3044\u305f\u5b9f\u4f8b\n     \u5b9f\u969b\u306b VirtualBox/VMWare \u4e0a\u3067\u5b9f\u6319\u52d5\u3092\u5b9f\u6f14\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30e2\n------------\n\n\u306a\u304a\u3001 EFI Shell \u4e0a\u3067\u3001\u300c3\u56de\u306e\u518d\u8d77\u52d5\u3092\u884c\u3044\u3001\u8d77\u52d5\u901f\u5ea6\u3092\u6e2c\u5b9a\u3057\u3001\u305d\u308c\u304c 8\u79d2\u672a\u6e80\u304b\u3092\u30c6\u30b9\u30c8\u3059\u308b\u300d\u3068\u3044\u3046 (\u3084\u3084\u6063\u610f\u7684\u306a) \u30b7\u30ca\u30ea\u30aa\u306e\u5834\u5408\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f\u3001 (\\*1) \u306e\u30eb\u30fc\u30d7\u306e\u4e2d\u3067\u3001 (\\*2) \u3067\u518d\u8d77\u52d5\u3092\u884c\u3044\u3001\u5e73\u5747\u3092\u6c42\u3081\u3066\u4e00\u56de\u306e\u518d\u8d77\u52d5\u306b\u304b\u304b\u308b\u6642\u9593\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u52d5\u4f5c\u306e\u69d8\u5b50\u306f `YouTube <https://youtu.be/gb7-UKnkjrM>`__ \u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n.. code:: python\n\n    import pausable_unittest\n    import pausable_unittest.efipauser\n    \n    import time\n    \n    class Sample(pausable_unittest.TestCase):\n        def test_reboot(self):\n            reboot_time = []\n            for i in range(3):                      # (*1)\n                print(\"Reboot %d...\" % i)\n                time.sleep(3)\n    \n                start = time.time()\n                self.reboot()                       # (*2)\n                end = time.time()\n    \n                reboot_time.append(end - start)\n    \n            avg_time = sum(reboot_time) / len(reboot_time)\n            self.assertLess(avg_time, 8)\n    \n    if __name__ == \"__main__\":\n        pausable_unittest.main(pausable_unittest.efipauser.Pauser())\n    \nPausable Unittest \u3068 EFI Stackless Python \u306e\u5165\u624b\u5148\n-----------------------------------------------------------------\n\n\u73fe\u5728\u958b\u767a\u4e2d\u306e Pausable Unittest \u306f\u4ee5\u4e0b\u306e URL \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002 https://github.com/masamitsu-murase/pausable_unittest\n\n\u65e5\u672c\u8a9e\u306e README \u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002 https://github.com/masamitsu-murase/pausable_unittest/blob/master/README.ja.md\n\n\u307e\u305f\u3001EFI Shell \u4e0a\u306b\u79fb\u690d\u3057\u305f Stackless Python \u306f\u3001\u4ee5\u4e0b\u306e\u30d6\u30e9\u30f3\u30c1\u306b\u3042\u308a\u307e\u3059\u3002 https://github.com/masamitsu-murase/edk2formruby/tree/stacklesspython279release",
  "duration": 1896,
  "language": "jpn",
  "recorded": "2016-09-22",
  "related_urls": [
    "https://docs.com/user564329/6866/pausable-unittest-on-efi-stackless-python-pycon-jp",
    "https://youtu.be/gb7-UKnkjrM",
    "https://github.com/masamitsu-murase/pausable_unittest",
    "https://github.com/masamitsu-murase/pausable_unittest/blob/master/README.ja.md",
    "https://github.com/masamitsu-murase/edk2formruby/tree/stacklesspython279release"
  ],
  "speakers": [
    "Masamitsu Murase"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/ddsHRXpShfw/maxresdefault.jpg",
  "title": "Pausable Unittest on EFI Stackless Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=ddsHRXpShfw"
    }
  ]
}
