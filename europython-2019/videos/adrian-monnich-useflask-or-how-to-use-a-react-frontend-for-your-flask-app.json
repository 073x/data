{
  "description": "\"useFlask() - or how to use a React frontend for your Flask app\n[EuroPython 2019 - Talk - 2019-07-12 - PyCharm]\n[Basel, CH]\n\nBy Adrian M\u00f6nnich\n\nMany Flask projects nowadays still use mostly static HTML, WTForms and just a bit of AJAX. All the JavaScript is usually included straight from .js files or just minified with Python tools like webassets.\n\nBut the JavaScript ecosystem has evolved a lot - one can now use tools like Babel to write modern JS even when targeting older browsers and a Webpack+Babel build is very straightforward and allows for advanced preprocessing of JavaScript code.\n\nIn this talk we'll even go one step further and not only use Webpack to build the assets, but also integrate a small demo Flask app with a React frontend where the Flask app only serves the static HTML page and uses a RESTful API to communicate with the React app.\n\nWe'll also look into how to keep convenient Flask features such as URL building in client-side code (using the js-flask-urls package) and of course React hooks will be used!\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/",
  "recorded": "2019-07-12",
  "speakers": [
    "Adrian M\u00f6nnich"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/r0_n9d9x97Y/hqdefault.jpg",
  "title": "useFlask() - or how to use a React frontend for your Flask app",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=r0_n9d9x97Y"
    }
  ]
}
