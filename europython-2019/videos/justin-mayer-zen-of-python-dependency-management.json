{
  "description": "\"Zen of Python Dependency Management\n[EuroPython 2019 - Talk - 2019-07-12 - Boston]\n[Basel, CH]\n\nBy Justin Mayer\n\nEnsuring reliably repeatable dependency installation has long been an unsolved problem for many Python projects. Pinning dependencies via setup.py and requirements.txt has historically been met with extra work and unexpected results, particularly when managing the dependencies of dependencies.\n\nThanks to PEP 518, Python projects can now more easily manage dependencies via the new pyproject.toml file specification. In its wake, a number of useful tools have arisen that use this file to provide enhanced dependency resolution, including Poetry, Hatch, and Pipenv.\n\nAttendees of this talk will take home the following knowledge and skills:\n\n\nhow to replace three files (setup.py, requirements.txt, and MANIFEST.ini) with just one: pyproject.toml\nwhy dependency resolution is hard and why it matters\nhow Poetry, Hatch, and Pipenv differ and when to use each\nwhy one might use a less magical alternative: pip-tools\nhow to use pipx to isolate system-wide Python tools\n\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/\n\n    \"",
  "recorded": "2019-07-12",
  "speakers": [
    "Justin Mayer"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/asL0dbN6pAY/hqdefault.jpg",
  "title": "Zen of Python Dependency Management",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=asL0dbN6pAY"
    }
  ]
}
