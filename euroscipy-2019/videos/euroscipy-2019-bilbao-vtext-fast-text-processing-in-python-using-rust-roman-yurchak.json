{
  "description": "EuroSciPy 2019 Bilbao \nSeptember 5, Thursday \nOteiza. Talk. 15.45\n\nvtext: fast text processing in Python using Rust\nRoman Yurchak \n\nIn this talk, we present some of the benefits of writing extensions for Python in Rust. We then illustrate this approach on the vtext project, that aims to be a high-performance library for text processing.\n\nScientific Python has historically relied on compiled extensions for performance critical parts of the code. In this talk, we outline how to write Rust extensions for Python using rust-numpy,\nproject. Advantages and limitations of this approach as compared to Cython or wrapping Fortran, C or C++ are also discussed.\n\nIn the second part, we introduce the vtext project that allows fast text processing in Python using Rust. In particular, we consider the problems of text tokenization, and (parallel) token counting resulting in a sparse vector representation of documents. These can then be used as input in machine learning or information retrieval applications. We outline the approach used in vtext and compare to existing solutions of these problems in the Python ecosystem.\n\nAbstract as a tweet \u2013 vtext: fast text processing and vectorization in Python using Rust \nProject Homepage / Git \u2013 https://github.com/rth/vtext \nPython Skill Level \u2013 professional \nDomain Expertise \u2013 none \nProject Homepage / Git \u2013 https://github.com/rth/vtext \nDomains \u2013 General-purpose Python, Open Source",
  "duration": 965,
  "published_at": "2020-03-06T15:07:44.000Z",
  "recorded": "",
  "speakers": [],
  "thumbnail_url": "https://i.ytimg.com/vi/qdDyQ5iWhPQ/hqdefault.jpg",
  "title": "EuroSciPy 2019 Bilbao - vtext: fast text processing in Python using Rust - Roman Yurchak",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=qdDyQ5iWhPQ"
    }
  ]
}