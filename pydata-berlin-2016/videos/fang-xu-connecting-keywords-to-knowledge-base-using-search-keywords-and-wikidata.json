{
  "copyright_text": "Standard YouTube License",
  "description": "PyData Berlin 2016\n\nThe development of large-scale Knowledge Base (KB) has drawn lots of attentions and efforts from both academy and industries recently . In this talk I will introduce how to use keywords and public available data to build our structural KB, and build knowledge retrieval system for different languages using python.\n\nMany large-scale Knowledge Bases (KB), such as Yago, Wikidata, Freebase, and Google\u2019s Knowledge Graph, have been build by extracting facts fro structural Wikipedia and/or natural language Web documents.\n\nThe main observation of using knowledge base is that not all facts are useful and have enough information. To tackle this problem I will introduce how we build various data sources to help facts and keywords selection. We will also discuss important questions of KB applications including, \n\n- Architecture of a KB processing and extraction system using Wikipedia and two public available KB including Wikidata and Yago.\n- Method for calculating contextual relevance between facts. \n- How to present different facts to users.\n\nResources:\n\n* Yago: https://www.mpi-inf.mpg.de/departments/databases-and-information-systems/research/yago-naga/yago/\n* Wikidata: https://www.wikidata.org/wiki/Wikidata:Main_Page\n* Freebase: https://developers.google.com/freebase/\n* Google\u2019s Knowledge Graph: https://developers.google.com/knowledge-graph/",
  "duration": 1831,
  "language": "eng",
  "recorded": "2016-06-01",
  "related_urls": [
    "https://www.wikidata.org/wiki/Wikidata:Main_Page",
    "https://www.mpi-inf.mpg.de/departments/databases-and-information-systems/research/yago-naga/yago/",
    "https://developers.google.com/freebase/",
    "https://developers.google.com/knowledge-graph/"
  ],
  "speakers": [
    "Fang Xu"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/SBZUaYC0AGs/maxresdefault.jpg",
  "title": "Connecting Keywords to Knowledge Base Using Search Keywords and Wikidata",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=SBZUaYC0AGs"
    }
  ]
}
