{
  "copyright_text": "Standard YouTube License",
  "description": "PyData Berlin 2016\n\nThere should be one-- and preferably only one --obvious way to do it. And that is functional - at least in my opinion. I'm working with Python for a living since two years after coming from a background in Ruby, Haskell, Clojure, and some more languages. Since then I have tried to marry ideomatic Python to the functional style I learned to love. It's time to share my experience.\n\nI will talk about\n\n- higher order functions\n- partial function application and currying\n- function composition\n- functional collection transformations (and why they are relevant for PySpark)\n- (fake) lazy evaluation\n\nand how it all relates to Python (and what's missing).\n\nSlides: https://github.com/kirel/functional-python",
  "duration": 2367,
  "language": "eng",
  "recorded": "2016-05-31",
  "related_urls": [
    "https://github.com/kirel/functional-python"
  ],
  "speakers": [
    "Daniel Kirsch"
  ],
  "tags": [
    "functional"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/r2eZ7lhqzNE/maxresdefault.jpg",
  "title": "Functional Programming in Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=r2eZ7lhqzNE"
    }
  ]
}
