{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Mark Burgess\nhttps://2016.pycon-au.org/schedule/99/view_talk\nA quick tutorial on genetic programming and its implementation in Python.\nIncluding the general process of evolution, the various representations of programs and particularly linear genetic programming.\nSome really basic python libraries are introduced, including the DEAP and pyevolve frameworks.\nIt has been presented and prototyped by github user mgard (and documented http://multigrad.blogspot.com.au/2014/06/fun-with-python-bytecode.html) that python bytecode itself could be directly evolved in linear genetic programming to alleviate the overhead of compiling the permutations of trees generated by the evolutionary process.\nPython bytecode itself is redly accessed and created by Cpython, though not compatible between versions and a subset of python bytecode instructions will be selected for the implementation of a basic example of symbolic regression.\nA futher and more useful example will be provided.",
  "duration": 1987,
  "language": "eng",
  "recorded": "2016-08-15",
  "related_urls": [
    "https://2016.pycon-au.org/schedule/99/view_talk",
    "http://multigrad.blogspot.com.au/2014/06/fun-with-python-bytecode.html"
  ],
  "speakers": [
    "Mark Burgess"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/Lo7k9-tP6Fc/maxresdefault.jpg",
  "title": "Linear Genetic Programming in Python Bytecode",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=Lo7k9-tP6Fc"
    }
  ]
}
