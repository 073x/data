{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "David Charles - Managing Kubernetes from Python using Kube\n[EuroPython 2016]\n[18 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/managing-kubernetes-from-python-using-kube)\n\nKubernetes is the Google Borg inspired control plane for Docker\ncontainers.  It has a great API but needs a load of HTTP client code\nand JSON processing to use it from Python.  This talk introduces Kube,\na Python wrapper around the Kubernetes API that enables you to manage\nyour Kubernetes cluster in a pythonic way while avoiding any\nKubernetes API peculiarities.  Programmers and operations folk who are\ninterested in interacting with the Kubernetes API using Python.\n\n-----\n\nAbstract\n--------------------\nDocker has had a transformative influence on the way we deploy\nsoftware and Kubernetes, the Google Borg inspired control plane for\nDocker-container- hosting-clusters, is gaining similar momentum.\nBeing able to easily interact with this technology from Python will\nbecome an increasingly important capability in many organisations.\nI'll discuss what the motivations behind writing Kube.  We'll dive\ninto Kube using the Python interactive interpreter, getting connected\nto the API, and simple viewing and label update operations. Finally\nI'll discuss more advanced resource management activities like Kube's\n'watch' API capability.\n\nObjectives\n--------------------\n\nAttendees will learn about the key concepts in getting resource\ninformation out of their Kubernetes cluster using Kube.\n\nOutline\n--------------------\n\n#. Setting the scene (3 minutes)\n#. Other Python kubernetes wrappers (2 minutes)\n#. Kubernetes concepts quick recap (5 minutes)\n#. Dive into Kube in the Python interactive interpreter (10 minutes)\n    * Outline prerequisites\n    * The entry point - a Cluster instance\n    * Views and Items - two important Kube concepts\n    * Item meta data: labels and versions\n#. More Kube features (5 minutes)\n    * Creating and deleting resources\n    * Using Kube's Watch API support\n    * The cluster proxy attribute for when you need to get at the actual API.\n#. Q&A (5 minutes)",
  "duration": 1720,
  "language": "eng",
  "recorded": "2016-07-28",
  "related_urls": [
    "https://ep2016.europython.eu//conference/talks/managing-kubernetes-from-python-using-kube"
  ],
  "speakers": [
    "David Charles"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/jJGJy0MUvZw/maxresdefault.jpg",
  "title": "Managing Kubernetes from Python using Kube",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=jJGJy0MUvZw"
    }
  ]
}
