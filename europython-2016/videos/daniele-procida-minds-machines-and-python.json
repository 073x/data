{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Daniele Procida - Minds, machines and Python\n[EuroPython 2016]\n[19 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/minds-machines-and-python)\n\nAre we looking in the wrong direction for artificial intelligence and\nmachine learning?\n\nI'll discuss an older but perhaps more satisfying approach, that has\nbeen neglected in recent years.\n\nIt begins with questions in logic and language, and can be explored\nusing easy techniques. I'll use simple Python programs to explore\nthree key notions in this AI research: **loops**, **self-reference**\nand **tangled hierarchies**, themselves directly reflected in\nimportant programming concepts.\n\n-----\n\nIn recent years, we've seen interesting and spectacular successes in\nartificial intelligence and machine learning, made possible by leaps\nin computing power and techniques able to harvest vast quantities of\ndata.\n\nThe results are uncanny. We see them everywhere, from the personal\nassistants built into smartphones to the neural networks that do an\nastounding job of recognising images. However, they're also\nsusceptible to the criticism that they represent not intelligence but\na mere simulation of it, and that producing a convincing simulacrum\nhas become more important than a genuine search for  intelligence or\nlearning.\n\nAt the same time, another, perhaps deeper, approach has become\nneglected in recent decades, along with the questions it asks about\nthe nature of mind, intelligence and learning. This approach begins\nwith fundamental questions in logic and language, and can be explored\nusing some of the simplest programming techniques.\n\nIn this talk, I'll use simple Python programs to explore three key\nnotions in this strand of artificial intelligence research: *loops*,\n*self-reference* and *tangled hierarchies*. The way these concepts\ndirectly reflect important concepts in programming suggests that for\nthe programmer, this approach could be more interesting and\nsatisfying, and simply more **fun,** than using huge ontologies and\nbig data to create mere simulacra of intelligence.\n\nThe examples I use will be concrete and easy to understand, even for\nnovice programmers.",
  "duration": 2733,
  "language": "eng",
  "recorded": "2016-07-31",
  "related_urls": [
    "https://ep2016.europython.eu//conference/talks/minds-machines-and-python"
  ],
  "speakers": [
    "Daniele Procida"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/SzPSA_qZfuA/maxresdefault.jpg",
  "title": "Minds, machines and Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=SzPSA_qZfuA"
    }
  ]
}
