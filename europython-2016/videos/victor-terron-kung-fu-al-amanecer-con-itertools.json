{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "V\u00edctor Terr\u00f3n - Kung Fu al amanecer con itertools\n[EuroPython 2016]\n[19 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/kung-fu-al-amanecer-con-itertools)\n\nEl m\u00f3dulo itertools es una de las piedras angulares de la programaci\u00f3n\navanzada en Python. Esta charla proporciona consejos pr\u00e1cticos del\n\u00e1lgebra de iteradores que pueden aplicarse de forma inmediata.\nDescubrir el m\u00f3dulo itertools supone arrancar el velo de nuestros\nojos, y una vez usadas funciones como `repeat()`, `takewhile()`,\n`dropwhile()` o `product()` no hay marcha atr\u00e1s \u2014 es imposible volver\nal mundo de los meros mortales donde las soluciones son m\u00e1s complejas\ny necesitan m\u00e1s memoria.\n\n-----\n\nEl m\u00f3dulo itertools es una de las piedras angulares de la programaci\u00f3n\navanzada en Python. Parte de la biblioteca est\u00e1ndar, nos ofrece un\n\u00e1lgebra de iteradores que permite encadenar abstracciones de forma\nelegante, haciendo posibles soluciones sencillas a la par que m\u00e1s\neficientes en su consumo de memoria.\n\nEl objetivo de esta charla es el de, ante todo, proporcionar consejos\ny lecciones claras que puedan aplicarse de forma inmediata.\nIlustr\u00e1ndolo con numerosos ejemplos, los asistentes abandonar\u00e1n la\ncharla habiendo asimilado como m\u00ednimo varios conceptos que mejorar\u00e1n\nindiscutible e irremediablemente su c\u00f3digo. El \u00e9nfasis se har\u00e1 en\nmostrar casos espec\u00edficos en los que una soluci\u00f3n tradicional puede\nser mejorada una y otra vez con funciones del m\u00f3dulo itertools.\n\nSupongamos, por ejemplo, que queremos alternar indefinidamente entre\ndos valores: -1 y 1. El reci\u00e9n iniciado utilizar\u00eda una variable cuyo\nvalor ir\u00eda modificando a cada paso y el usuario medio quiz\u00e1s optar\u00eda\npor un generador infinito. Ambas soluciones dignas y honorables, pero\nque palidecen ante la maestr\u00eda del artista marcial que que tan s\u00f3lo\nnecesita `itertools.cycle()`. Porque el m\u00f3dulo itertools es as\u00ed: una\nvez ca\u00eddo el velo de nuestros ojos y descubiertas funciones como\n`repeat()`, `takewhile()`, `dropwhile()` o `product()`, no hay marcha\natr\u00e1s. En esta charla vamos a aprender a reconocer cu\u00e1ndo pueden ser\nusadas, proporcion\u00e1ndonos en una \u00fanica l\u00ednea lo que para los meros\nmortales supone mucho m\u00e1s trabajo.",
  "duration": 2919,
  "language": "spa",
  "recorded": "2016-08-05",
  "related_urls": [
    "https://ep2016.europython.eu//conference/talks/kung-fu-al-amanecer-con-itertools"
  ],
  "speakers": [
    "V\u00edctor Terr\u00f3n"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/4ZIxcdREYVc/maxresdefault.jpg",
  "title": "Kung Fu al amanecer con itertools",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=4ZIxcdREYVc"
    }
  ]
}
