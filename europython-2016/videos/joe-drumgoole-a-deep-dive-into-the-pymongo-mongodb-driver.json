{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Joe Drumgoole - A deep dive into the Pymongo MongoDB driver\n[EuroPython 2016]\n[21 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/a-deep-dive-into-the-pymongo-mongodb-driver)\n\nThe Pymongo driver is one of MongoDB\u2019s most popular driver interfaces for\nconnecting to MongoDB. But developers rarely look under the cover to see\nwhat\u2019s happening inside the driver.\n\nBy having a deeper insight into how the driver constructs server requests\nand responds, developers will be able to write more effective MongoDB\napplications in Python.\n\n-----\n\nThe Pymongo driver is one of MongoDB\u2019s most popular driver interfaces for\nconnecting to MongoDB. But developers rarely look under the cover to see\nwhat\u2019s happening inside the driver.\n\nBy having a deeper insight into how the driver constructs server requests\nand responds, developers will be able to write more effective MongoDB\napplications in Python.\n\nWe will look at :\n\n- Initial connection\n- A query\n- A simple write operation\n- A bulk write operation\n- How the driver responds when we have a node failure\n\nWe will also give insight into the driver\u2019s approach to server selection\nwhen connecting to a replicas set (a multi-node instance of MongoDB).",
  "duration": 3203,
  "language": "eng",
  "recorded": "2016-08-04",
  "related_urls": [
    "https://ep2016.europython.eu//conference/talks/a-deep-dive-into-the-pymongo-mongodb-driver"
  ],
  "speakers": [
    "Joe Drumgoole"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/2gee5oUAO14/maxresdefault.jpg",
  "title": "A deep dive into the Pymongo MongoDB driver",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=2gee5oUAO14"
    }
  ]
}
