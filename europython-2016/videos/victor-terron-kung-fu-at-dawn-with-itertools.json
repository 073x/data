{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "V\u00edctor Terr\u00f3n - Kung Fu at Dawn with Itertools\n[EuroPython 2016]\n[18 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/kung-fu-at-dawn-with-itertools)\n\nThe itertools module is one of the cornerstones of advanced\nprogramming in Python. This talk offers practical advice about\niterator algebra that can be put into practice immediately.\nDiscovering the itertools module means taking the veil from our eyes,\nand once we use functions such as repeat(), takewhile(), dropwhile()\nor product(), there is no return \u2014 it is impossible to come back to\nthe world of the mere mortals, where solutions are more complex and\nneed more memory.\n\n-----\n\nThe itertools module is one of the cornerstones of advanced\nprogramming in Python. Part of the standard library, it provides an\niterator algebra that allows us to elegantly chain abstractions,\nenabling solutions that are both simpler and more memory efficient.\n\nThe goal of this talk is to offer practical advice and clear lessons\nthat can be immediately put into practice. Illustrating it with\nnumerous examples, attendees will leave having assimilated at least\nseveral concepts that will improve their code undeniably and\nirremediably. Emphasis will be on showing specific cases where a\ntraditional solution can be overhauled over and over with functions\nfrom the itertools module.\n\nLet\u2019s say, for example, that we want to alternate indefinitely between\ntwo values: -1 and 1. The novice would use a variable, updating its\nvalue at each step, and the average user would maybe opt for an\nendless generator. Both are worthy and honorable solutions, but they\npale before the mastery of the martial artist who only needs\nitertools.cycle(). Because that is the nature of the itertools module:\nonce the veil falls from our eyes and we come across functions such as\nrepeat(), takewhile(), dropwhile() or product(), there is no return.\nIn this talk we will learn to identify when they can be used,\naccomplishing with a single line of code what for the mere mortals\ntakes much more effort.",
  "duration": 2608,
  "language": "eng",
  "recorded": "2016-07-28",
  "related_urls": [
    "https://ep2016.europython.eu//conference/talks/kung-fu-at-dawn-with-itertools"
  ],
  "speakers": [
    "V\u00edctor Terr\u00f3n"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/iCrOGS1QlB8/maxresdefault.jpg",
  "title": "Kung Fu at Dawn with Itertools",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=iCrOGS1QlB8"
    }
  ]
}
