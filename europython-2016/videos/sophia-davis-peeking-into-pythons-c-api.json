{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Sophia Davis - Peeking into Python\u2019s C API\n[EuroPython 2016]\n[22 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/peeking-into-pythons-c-api)\n\nEver wondered how Python works under the hood? One way to learn about\nPython-the-C-program is by exploring the C API for writing Python\nbindings to native C libraries. In this talk, we will walk through a\nsimple example of making a C library callable from Python code and\nvice versa. Along the way, we will encounter some essential features\nof Python: reference counting, memory management, and the inner-\nworkings of objects and modules.\n\n-----\n\nWe all love Python. It\u2019s so elegant and easy to use as a programming\nlanguage that we forget about the giant, complicated C program\nexecuting our strings of white-space sensitive code. For many Python\nprogrammers, this side of Python is just a big black box. It works\nwell, so thankfully we don\u2019t *need* to go messing around inside... but\nwhat if you *want* to look into the inner workings of this powerful\ntool? One way to dive into the C-program-side of Python is by\nexploring the C API for writing Python bindings to native C libraries.\nIn this talk I will explore the basics of this API as I recount my\njourney to make a simple C library callable from Python code, and\nallow C code to invoke objects defined in pure Python. Along the way,\nwe will encounter some essential features of Python: reference\ncounting, memory management, and the inner-workings of objects and\nmodules.",
  "duration": 1803,
  "language": "eng",
  "recorded": "2016-08-05",
  "related_urls": [
    "https://ep2016.europython.eu//conference/talks/peeking-into-pythons-c-api"
  ],
  "speakers": [
    "Sophia Davis"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/hhU8LOgy-QQ/maxresdefault.jpg",
  "title": "Peeking into Python\u2019s C API",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=hhU8LOgy-QQ"
    }
  ]
}
