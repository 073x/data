{
  "copyright_text": null,
  "description": "Packaging and dependency management is foundational in software deployment, but is often implemented so that outcomes depend on state and are not repeatable. This has implications for reproducing computational experiments, which require repeatable deployment of environments whenever possible. For example, the popular package managers Conda and Pip are both examples of imperative and stateful implementations. In contrast, the Nix package manager is a functional package manager that implements fully repeatable environment deployment in a systematic manner. The talk will introduce the Nix package manager and demonstrate using Nix to generate repeatable Python environments as well as environments involving multiple languages.\nSee the full SciPy 2019 playlist at https://www.youtube.com/playlist?list=PLYx7XA2nY5GcDQblpQ_M1V3PQPoLWiDAC\nConnect with us!\n*****************\nhttps://twitter.com/enthought\nhttps://www.facebook.com/Enthought/\nhttps://www.linkedin.com/company/enthought",
  "duration": 2028,
  "language": "eng",
  "recorded": "2019-07-11",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://www.scipy2019.scipy.org/confschedule"
    }
  ],
  "speakers": [
    "Daniel Wheeler"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/USDbjmxEZ_I/maxresdefault.jpg",
  "title": "Using Nix for Repeatable Python Environments",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=USDbjmxEZ_I"
    }
  ]
}
