{
    "copyright_text": "This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/\n",
    "description": "This is a small code snippet that I have written in Python for the POC of getting the GPS coordinate from android phone:\r\n\r\nimport androidhelper \r\nimport json \r\nimport time \r\nfrom bottle import Bottle, run, response, request \r\n\r\napp = Bottle() \r\ndroid = androidhelper.Android() \r\n\r\n\r\n@app.route(\"/location\") \r\ndef get_location(): \r\n\r\n    droid.startLocating() \r\n    droid.eventWaitFor('location', 12500) \r\n\r\n    time.sleep(0.1) \r\n\r\n    current_location = droid.readLocation().result \r\n\r\n    if not current_location: \r\n        current_location = droid.getLastKnownLocation().result \r\n\r\n    droid.stopLocating() \r\n    response.content_type = \"application/json\" \r\n\r\n    return json.dumps( \r\n        { \r\n            \"result\": current_location \r\n        }, indent=4 \r\n    )\r\nThis project was initiated during my Christmas vacation, inspired by Android Barcode Scanner as I was looking on the solution that I could catalogue my books by scanning the ISBN using android phone.\r\n\r\nThis quick solution did save me enormous amount of time in cataloguing my books. Intriguing by the design of APIs that can interact with android intents, I decided to dig further to understand how the APIs works. In concept, there is an RPC call between android app and python interpreter within the app that acts as a bridge, which allows python APIs to trigger Android intents, upon calling related APIs. For example, using the code snippet above, when Python GPS API is executed, the API will send request to Android GPS intent via the RPC call. Once Android intent receives the request, it will grab the GPS data, and passes the GPS data back to Python GPS API through the same channel.\r\n\r\nReference:\r\npython-for-android\r\nQpython\r\nAndroid Barcode Scanner",
    "duration": 1761.0,
    "language": "eng",
    "recorded": "2020-07-23",
    "related_urls": [
        {
            "label": "Conference schedule",
            "url": "https://ep2020.europython.eu/schedule/"
        },
        {
            "label": "Conference Website",
            "url": "https://ep2020.europython.eu/"
        },
        {
            "label": "https://creativecommons.org/licenses/by-nc-sa/3.0/",
            "url": "https://creativecommons.org/licenses/by-nc-sa/3.0/"
        },
        {
            "label": "https://ep2020.europython.eu/events/speaker-release-agreement/",
            "url": "https://ep2020.europython.eu/events/speaker-release-agreement/"
        },
        {
            "label": "Talk URL",
            "url": "/schedule/23-july?selected=5q86Huj-honey-there-is-a-python-in-my-android-phone"
        },
        {
            "label": "Slides",
            "url": "/media/conference/slides/5q86Huj-honey-there-is-a-python-in-my-android-phone.pdf"
        }
    ],
    "speakers": [
        "James Ing Wei Tang"
    ],
    "tags": [
        "conference",
        "europython",
        "europython-2020",
        "europython-online",
        "python",
        "Gadgets",
        "General",
        "Python 3"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/S32Z55c_GkY/hqdefault.jpg?sqp=-oaymwEZCNACELwBSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLBcxlv3o06seNjEvtmigqVHvAcA4w",
    "title": "James Ing Wei Tang - Honey, There Is a Python in My Android Phone!",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=S32Z55c_GkY"
        }
    ]
}