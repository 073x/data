{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Jean-Philippe Caissy - Static type-checking is dead, long live static type-checking in Python!\n[EuroPython 2015]\n[24 July 2015]\n[Bilbao, Euskadi, Spain]\n\nA few months ago, Guido unfolded PEP 484, which was highlighted at\nPyCon 2015 as a keynote presentation. This proposal would introduce\ntype hints for Python 3.5. While the debate is still roaring and\nwithout taking a side, I believe that there is much to learn from\nstatic type-checking systems.\n\nThe purpose of this talk is to introduce ways that could be used to\nfully take over the amazing power that comes with static types, inside\na dynamic type language such as Python. The talk will go over what\nexactly a static type system is, and what kind of problem it tries to\nsolve. We will also review Guido's proposal of type hinting, and what\nit could mean to you. Finally, I will present a few libraries that are\navailable, such as Hypothesis  or various QuickCheck-inspired library\nthat tries to build more robust tests, how they achieve it and their\nlimitations. Throughout the talk, a lot of examples will used to fully\nillustrate the ideas being explained.\n\nAt the end of this talk, you should have a better understanding of the\nwonderful world of type systems, and what it really means to you. It\nshould help you decide wether using type hints will be helpful to you\nand also if an external library trying to fuzz your tests has its\nplace inside your project",
  "duration": 1465,
  "language": "eng",
  "recorded": "2015-08-03",
  "related_urls": [],
  "speakers": [
    "Jean-Philippe Caissy"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/xuY7qlDY6_s/maxresdefault.jpg",
  "title": "Static type-checking is dead, long live static type-checking in Python!",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=xuY7qlDY6_s"
    }
  ]
}
