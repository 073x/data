{
  "copyright_text": "Standard YouTube License",
  "description": "Vasilij Litvinov - Tuning Python applications can dramatically increase performance\n[EuroPython 2015]\n[24 July 2015]\n[Bilbao, Euskadi, Spain]\n\nTraditional Python profiling tools have limitations.  Standard tools\nlike **cProfile** and most all third party tools (like **Python\nTools** plugin for Microsoft Visual Studio) suffer from common flaws.\nFirst, the profiling overhead is high (up to 50%).  Second, the\ninformation provided is \u201cfunction-level\u201d i.e. the  tool shows how much\ntime was spent within a function, but not actionable \u201cline-level\u201d\ninformation to show which exact lines are *the bottleneck* in a\nfunction.  Adding \u201cline-level\u201d information to most tools causes the\napplication to run even slower. Third, some tools require modification\nof the application source code to enable profiling thus disrupting\ndevelopment.\n\nThis talk presents an experimental Python profiler.  It typically has\nless than 15% overhead, shows line-level information and does not\nrequire modification of application source code.  Experiments using it\nresulted in performance gains of 2x and more.  Of course results vary\nby application, but in a typical application there may be quick\noptimizations easily identified by this type of profiler.\n\nThe talk will briefly describe the basics of what, why and how to\nprofile.  The profiler\u2018s use and results will be shown in the\npresentation with examples based on real-life applications.  Previous\nexperience of working with profilers and trying to optimize an\napplication is a plus, but not required, to gain a better appreciation\nof the work presented.",
  "duration": 2204,
  "language": "eng",
  "recorded": "2015-08-08",
  "related_urls": [],
  "speakers": [
    "Vasilij Litvinov"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/OAemUvFGhE4/hqdefault.jpg",
  "title": "Tuning Python applications can dramatically increase performance",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=OAemUvFGhE4"
    }
  ]
}
