{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "Sebastian Buczy\u0144ski - Distributed locks with Python and Redis\n[EuroPython 2015]\n[22 July 2015]\n[Bilbao, Euskadi, Spain]\n\nTraditional methods of coping with concurrent programming problems are\nwell-known and described in literature. Many programming languages,\nincluding Python, contain in their standard libraries tools and\nprimitives such as semaphores and can spawn threads or subprocesses.\n\nHowever, in the face of increasing interest in service oriented\narchitecture and building distributed systems, that span across many\nindependent server nodes, emerges a need to adapt traditional\nsolutions, so they can be applied in the new environment.\n\nIn this talk I will share my experiences gathered during building a\nmodern contact center - highly concurrent system, which requires\ncertain resources to be accessed exclusively by several self-contained\ncomponents.",
  "duration": 1349,
  "language": "eng",
  "recorded": "2015-08-03",
  "related_urls": [],
  "speakers": [
    "Sebastian Buczy\u0144ski"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/udhV84W3-Jg/maxresdefault.jpg",
  "title": "Distributed locks with Python and Redis",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=udhV84W3-Jg"
    }
  ]
}
