{
  "alias": "video/3324/efficient-large-data-operations-with-biggus",
  "category": "EuroScipy 2014",
  "copyright_text": "youtube",
  "description": "As scientific datasets continue to grow exponentially in size, the\nresource requirements of even simple analyses can quickly grow to become\na problem -- e.g. the job takes an unreasonably long time, or simply\nruns out of space.\n\nExisting solutions to this may be powerful, but can also come with a\nlarge complexity overhead, especially for the non-expert user. This\nmakes adapting an existing analysis to the needs of larger datasets\npotentially very costly.\n\nBiggus provides simple abstractions of data access and calculations\nwhich provide lazy evaluation. It exposes this as simple virtual array\nobject which mimics a numpy array. Thus, it does not require the user to\nre-cast an operation in unfamiliar terms, or specify unrelated details\nof data storage or concurrency factors.\n\nThe lazy evaluation approach allows optimised resource usage for both\nstorage accesses and the parallelisation of calculations. Pure Python is\nwell suited to describing and implementing these techniques, and the\nresulting implementation is easily accessible to the average user.\n\nAt the Met Office, we develop data analysis tools for a large community\nof research scientists. We developed\n`Biggus <https://github.com/SciTools/biggus>`__ as a resource for the\nIris project, our next-generation analysis library for meteorological\nand oceanographic data (see: http://scitools.org.uk/iris/). While Biggus\nis still work-in-progress, within Iris it is already delivering\nsignificant benefit, in tasks such as catalogueing large datasets and\naccelerating statistical calculations. Here, performance already exceeds\nthat of other standard software toolsets.\n\nSchedule\n--------\n\n-  the problems Biggus is aiming to solve, and techniques employed\n-  an overview of the architecture and code of the current\n   implementation\n-  a demonstration of current performance, in ease-of-use and efficiency\n   benefits\n-  suggestions for future developments; how to get involved; questions\n\n",
  "duration": null,
  "id": 3324,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2014-10-22",
  "related_urls": [
    "http://scitools.org.uk/iris/).",
    "https://github.com/SciTools/biggus"
  ],
  "slug": "efficient-large-data-operations-with-biggus",
  "speakers": [
    "Patrick Peglar"
  ],
  "summary": "Biggus is a lightweight pure-Python package which implements lazy\noperations on numpy array-like objects. This provides dramatically\nimproved efficiency in analysing large datasets, for minimal additional\neffort in the client code.\n",
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/7rpcWZJaGFo/hqdefault.jpg",
  "title": "Efficient large data operations with Biggus",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=7rpcWZJaGFo"
    }
  ]
}
