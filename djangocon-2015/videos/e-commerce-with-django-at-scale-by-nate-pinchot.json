{
  "category": "DjangoCon 2015",
  "copyright_text": "",
  "description": "",
  "duration": 1213,
  "id": 4835,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2015-09-18",
  "slug": "e-commerce-with-django-at-scale-by-nate-pinchot",
  "speakers": [
    "Nate Pinchot"
  ],
  "summary": "E-Commerce with Django at Scale: Effective Performance Lessons Learned\n\nI'll take you through the most effective performance lessons we've\nlearned and show you how you can implement them (with example code).\n\nTWO-PASS CACHING WITH CLASS-BASED VIEWS\n\nBy far, this is one of the most effective performance optimizations we\nhave done in terms of HTTP response time.\n\nUsing class-based views, we are able to do two-pass caching. On the\nfirst pass of the view, we render everything that's not specific to the\nuser. No AJAX calls needed to get user specific content on the page.\nI'll show you how.\n\nDATA CACHING STRATEGY\n\nI'll review how we use multiple levels of data caching to greatly\nimprove the amount of time it takes to rebuild the entire cache.\n\nDB READ REPLICAS FOR PERFORMANCE / CUSTOM BACKEND FOR FAILOVER\n\nRead replica databases are great for performance. You've set up a few\nread replicas and implemented a fancy new database router which sends\nread queries to the read replicas (round robin) for any data that\ndoesn't need to be up-to-the-millisecond fresh (e.g. blog posts, product\ndescriptions).\n\nYou're sitting back and relishing in the improved performance when one\nof your database read replicas goes offline. Now what? I'll show you how\nwe implemented a custom database backend to handle this gracefully.\n\nMIGRATIONS RULES\n\nThis is less of a performance optimization and more of a set of rules we\ntry to stick to. I'll review some snafus we've had and how we avoided\nfuture production issues while keeping the site at 99% uptime.\n",
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/QZLHULo7fzo/maxresdefault.jpg",
  "title": "E-Commerce with Django at Scale: Effective Performance Lessons Learned",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=QZLHULo7fzo"
    }
  ]
}
