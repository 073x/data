{
  "category": "DjangoCon 2015",
  "copyright_text": "",
  "description": "",
  "duration": 1494,
  "id": 4841,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2015-09-18",
  "slug": "hunting-for-treasure-in-django-by-sebastian-vetter",
  "speakers": [
    "Sebastian Vetter"
  ],
  "summary": "Hunting for Treasure in Django by Sebastian Vetter\n\nDjango is a comprehensive web framework that provides well-defined\nconcepts such as request, response, middleware and view that make our\nlives as perfectionists with deadlines much easier. What many of us are\nnot aware of is the rich collection of utilities and tooling around\nthese concepts that are part of the famework. Decorators, helper\nfunctions and context managers that are used internally but can make\nlife as a developer much easier as well.\n\nIntroduction (~ 2 mins)\n\nA little bit about me. Why am I talking about this? Django's Hidden\nTreasures (~ 4 mins)\n\nThe reason for this talks. What do I consider hidden treasures? Which\nDjango modules are interesting? Are they documented and were do I find\nit? Examples of hidden treasures:\n\nA quick introduction of the module. What's a possible use case for it?\nHow does it solve it? Where is it used in the Django?\n\ncached\\_property (~ 2 mins)\n\nimport\\_string (~ 2 mins)\n\nlazy, LazyObject and lazy\\_property (~ 3 mins)\n\ndecorators module (~ 4 mins)\n\nclassonlymethod decorator\\_from\\_middleware update\\_wrapper and wraps\n(technically not Django) django.views (~ 4 mins)\n\ndebug.cleanse\\_setting decorators.debug.sensitive\\_parameters\ndecorators.debug.sensitive\\_post\\_paramete\u00adrs Wrapping up (~ 2 mins)\n\nDjango documentation links. Some suggestions for further investigation.\n",
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/vglyQXyhc8o/maxresdefault.jpg",
  "title": "Hunting for Treasure in Django",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=vglyQXyhc8o"
    }
  ]
}
